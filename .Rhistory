tags$div(tags$title('Add raw files'),
tags$div(shinyDirButton("directory", "Add raw data", "Upload")))
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
fileInput('file', 'Load processed data', multiple = TRUE)
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
hr()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
runs
class(runs)
data(runs)
c(runs, ())
c(runs, c())
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
tags$h1(id='dash_board', 'Dashboard')
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
csvFileInput("datafile", "User data (.csv format)")
),
mainPanel(
dataTableOutput("table")
)
)
)
server <- function(input, output, session) {
datafile <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
datafile()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
csvFileInput("datafile", "User data (.csv format)")
),
mainPanel(
dataTableOutput("table")
)
)
)
library(shinyFiles)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
csvFileInput("datafile", "User data (.csv format)")
),
mainPanel(
dataTableOutput("table")
)
)
)
library(shiny)
library(shinyFiles)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
fileInput("datafile", "User data (.csv format)")
),
mainPanel(
dataTableOutput("table")
)
)
)
server <- function(input, output, session) {
datafile <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
datafile()
})
}
shinyApp(ui, server)
library(shiny)
library(shinyFiles)
# Module server function
csvFile <- function(input, output, session, stringsAsFactors) {
# The selected file, if any
userFile <- reactive({
# If no file is selected, don't do anything
validate(need(input$file, message = FALSE))
input$file
})
# The user's data, parsed into a data frame
dataframe <- reactive({
read.csv(userFile()$datapath,
header = input$heading,
quote = input$quote,
stringsAsFactors = stringsAsFactors)
})
# We can run observers in here if we want to
observe({
msg <- sprintf("File %s was uploaded", userFile()$name)
cat(msg, "\n")
})
# Return the reactive that yields the data frame
return(dataframe)
}
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
fileInput("datafile", "User data (.csv format)")
),
mainPanel(
dataTableOutput("table")
)
)
)
server <- function(input, output, session) {
datafile <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
datafile()
})
}
shinyApp(ui, server)
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
checkboxInput("header", "Header", TRUE)
),
mainPanel(
tableOutput("contents")
)
)
)
server <- function(input, output) {
output$contents <- renderTable({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
print(inFile$datapath)
read.csv(inFile$datapath, header = input$header)
})
}
shinyApp(ui, server)
}
startApp()
load('~/Desktop/test.RData')
a <- load('~/Desktop/test.RData')
a
a <- get(load('~/Desktop/test.RData'))
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
substr('/Users/robinhornak/',1,nchar('/Users/robinhornak/')-1)
paste0("/Users/robinhornak", '/')
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
runs
length(runs)
runs1 <- runs
runs <- c(runs, runs1)
devtools::load_all()
startApp()
if (interactive()) {
ui <- fluidPage(
downloadLink("downloadData", "Download")
)
server <- function(input, output) {
# Our dataset
data <- mtcars
output$downloadData <- downloadHandler(
filename = function() {
paste("data-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(data, file)
}
)
}
shinyApp(ui, server)
}
if (interactive()) {
ui <- fluidPage(
downloadButton("downloadData", "Download")
)
server <- function(input, output) {
# Our dataset
data <- mtcars
output$downloadData <- downloadHandler(
filename = function() {
paste("data-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(data, file)
}
)
}
shinyApp(ui, server)
}
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
startApp()
d <- load(file = '~/Downloads/data.RData')
devtools::load_all()
startApp()
devtools::load_all()
startApp()
runs
saveRDS(runs, file='~/Desktop/test.RData')
d <- load(file = '~/Desktop/test.RData')
saveRDS(runs, file='~/Desktop/test.RData')
d <- load(file = '~/Desktop/test.RData')
data(runs)
saveRDS(runs, file='~/Desktop/test.RData')
d <- load(file = '~/Desktop/test.RData')
saveRDS(runs, file='~/Desktop/test.rds')
d <- load(file = '~/Desktop/test.rds')
save(runs, file='~/Desktop/test.rds')
d <- load(file = '~/Desktop/test.rds')
saveRDS(runs, file='~/Desktop/test.RData')
d <- readRDS(file = '~/Desktop/test.RData')
class(d)
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
library(DT)
devtools::document()
devtools::load_all()
startApp()
devtools::load_all()
devtools::load_all()
startApp()
devtools::load_all()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
