?sapply
df[,c(2:4)] <- sapply(df[,c(2:4)],log)
View(df_model2)
df <- df_model2[, !(names(df_model2) %in% 'lag1')]
df <- read.table(file = 'emissionssw.dat', header = TRUE)
df[,c('log_nox', 'log_noxem', 'log_wx')] <- sapply(df[,c(1:3)], log)
df <- read.table(file = 'emissionssw.dat', header = TRUE)
df[,c('log_nox', 'log_noxem', 'log_ws')] <- sapply(df[,c(1:3)], log)
df <- df[, !(names(df) %in% 'nox')]
ggpairs(df)
df <- df[, c(4, 1:3, 5,6)]
ggpairs(df)
df$log_ws_log_noxem <- df$log_ws*df$log_noxem
df$log_ws_humidity <- df$log_ws*df$humidity
df$log_noxem_humidity <- df$humidity*df$log_noxem
ggpairs(df)
df <- read.table(file = 'emissionssw.dat', header = TRUE)
df[,c('log_nox', 'log_noxem', 'log_ws')] <- sapply(df[,c(1:3)], log)
df <- df[, !(names(df) %in% 'nox')]
df <- df[, c(4, 1:3, 5,6)]
df$ws_noxem <- df$noxem*df$ws
df$ws_humidity <- df$ws*df$humidity
df$noxem_humidity <- df$humidity*df$noxem
ggpairs(df)
df$noxem_humidity_ws <- df$ws*df$humidity*df$noxem
ggpairs(df)
df$ws_humidity <- log(df$ws*df$humidity)
df$noxem_humidity <- log(df$humidity*df$noxem)
df$noxem_humidity_ws <- log(df$ws*df$humidity*df$noxem)
ggpairs(df)
df$ws_noxem <- df$noxem*df$ws
df$ws_humidity <- df$ws*df$humidity
df$noxem_humidity <- df$humidity*df$noxem
ggpairs(df)
model_2 <- fit(log_nox ~ ., data = df)
model_2 <- lm(log_nox ~ ., data = df)
summary(model_2)
model_3 <- lm(log_nox ~ ., data = df)
summary(model_3)
df_3 <- df
df <- read.table(file = 'emissionssw.dat', header = TRUE)
df_3 <- df
df_3[,c('log_nox', 'log_noxem', 'log_ws')] <- sapply(df_3[,c(1:3)], log)
df_3 <- df_3[, !(names(df_3_3) %in% 'nox')]
df_3 <- df_3[, c(4, 1:3, 5,6)]
df_3$ws_humidity <- df_3$ws*df_3$humidity
df_3 <- df
df_3[,c('log_nox', 'log_noxem', 'log_ws')] <- sapply(df_3[,c(1:3)], log)
df_3 <- df_3[, !(names(df_3) %in% 'nox')]
df_3 <- df_3[, c(4, 1:3, 5,6)]
df_3$ws_noxem <- df_3$noxem*df_3$ws
df_3$ws_humidity <- df_3$ws*df_3$humidity
df_3$noxem_humidity <- df_3$humidity*df_3$noxem
df_3$noxem_humidity_ws <- df_3$ws*df_3$humidity*df_3$noxem
ggpairs(df_3)
View(df)
df_4 <- df
df_4[, c('noxem_sq', 'ws_sq', 'humidity_sq')] <- sapply(df_4[,c(2:4)], x^2)
df_4[, c('noxem_sq', 'ws_sq', 'humidity_sq')] <- sapply(df_4[,c(2:4)], function(x) {x^2})
View(df_4)
df_4[, c('noxem_cube', 'ws_cube', 'humidity_cube')] <- sapply(df_4[,c(2:4)], function(x) {x^3})
ggpairs(df_4)
ggpairs(scale(df_4))
ggpairs(as.date.frame(scale(df_4)))
ggpairs(as.data.frame(scale(df_4)))
df_4$nox <- log(df_4$nox)
df_4[, c('noxem_sq', 'ws_sq', 'humidity_sq')] <- sapply(df_4[,c(2:4)], function(x) {x^2})
df_4[, c('noxem_cube', 'ws_cube', 'humidity_cube')] <- sapply(df_4[,c(2:4)], function(x) {x^3})
ggpairs(as.data.frame(scale(df_4)))
df_3 <- df
df_3[,c('log_nox', 'log_noxem', 'log_ws')] <- sapply(df_3[,c(1:3)], log)
df_3 <- df_3[, !(names(df_3) %in% 'nox')]
df_3 <- df_3[, c(4, 1:3, 5,6)]
df_3$ws_noxem <- df_3$noxem*df_3$ws
df_3$ws_humidity <- df_3$ws*df_3$humidity
df_3$noxem_humidity <- df_3$humidity*df_3$noxem
df_3$noxem_humidity_ws <- df_3$ws*df_3$humidity*df_3$noxem
ggpairs(df_3)
df_3$nox <- log(df_3$nox)
df_3 <- df_3[, c(4, 1:3, 5,6)]
df_3 <- df
df_3[,c('log_nox', 'log_noxem', 'log_ws')] <- sapply(df_3[,c(1:3)], log)
df_3 <- df_3[, !(names(df_3) %in% 'nox')]
df_3$nox <- log(df_3$nox)
df_3 <- df_3[, c(4, 1:3, 5,6)]
df_3$ws_noxem <- df_3$noxem*df_3$ws
df_3$ws_humidity <- df_3$ws*df_3$humidity
df_3$noxem_humidity <- df_3$humidity*df_3$noxem
df_3$noxem_humidity_ws <- df_3$ws*df_3$humidity*df_3$noxem
ggpairs(df_3)
vif(fit)
library(MASS)
vif(fit)
?vif
install.packages("VIF")
library(VIF)
vif(fit)
fit <- lm(nox~., data=df)
predicted_values <- predict(fit, df)
model_summary <- summary(fit)
model_summary
vif(fit)
VIF::vif(fit)
# the target multiple regression model
res <- lm(Ozone ~ Wind+Temp+Solar.R, data=airquality)
summary(res)
# checking multicolinearity for independent variables.
VIF(lm(Wind ~ Temp+Solar.R, data=airquality))
# the target multiple regression model
res <- lm(Ozone ~ Wind+Temp+Solar.R, data=airquality)
summary(res)
# checking multicolinearity for independent variables.
VIF(lm(Wind ~ Temp+Solar.R, data=airquality))
vif(lm(Wind ~ Temp+Solar.R, data=airquality))vif()
vif(lm(Wind ~ Temp+Solar.R, data=airquality))
install.packages("fmsb")
library(fmsb)
VIF(fit)
library(car)
vif(fit)
1e-03
1e-02
1e-03
1e-01
1e-02
1e-02
5e-02
1e-03
5e-3
5e-2
devtools::load_all()
setwd("~/trackeR")
devtools::load_all()
startApp()
devtools::load_all()
startApp()
for(i in c("pace", "heart.rate", 'altitude')){print(i)}
lapply(c("pace", "heart.rate", 'altitude'), function(i) {i})
a <- lapply(c("pace", "heart.rate", 'altitude'), function(i) {i})
a
length(a)
a[1]
a[[1]]
lab_sum <- function(feature, data, whole_text = TRUE){
feature <- as.character(feature)
units <- getUnits(data)
concept <- switch(feature, 'avgPace' = "pace", 'avgSpeed' = "speed",
'distance' = "distance", 'duration' = "duration",
'avgPower' = "power", 'avgCadence' = "cadence", 'avgHeartRate' = "heart.rate")
thisunit <- units$unit[units$variable == concept]
prettyUnit <- prettifyUnits(thisunit)
if (whole_text == TRUE){
ret <- switch(feature,
"distance" = paste0("Distance \n [", prettyUnit,"]"),
"duration" = paste0("Duration \n [", prettyUnit,"]"),
"avgSpeed" = paste0("Average Speed \n [", prettyUnit,"]"),
"avgPace" = paste0("Average Pace \n [", prettyUnit,"]"),
"avgCadence" = paste0("Average Cadence \n [", prettyUnit,"]"),
"avgPower" = paste0("Average Power \n [", prettyUnit,"]"),
"avgHeartRate" = paste0("Average Heart Rate \n [", prettyUnit,"]"),
"wrRatio" = "work-to-rest \n ratio"
)
ret
} else {
ret <- switch(feature,
"distance" = paste0("[", prettyUnit,"]"),
"duration" = paste0("[", prettyUnit,"]"),
"avgSpeed" = paste0("[", prettyUnit,"]"),
"avgPace" = paste0("[", prettyUnit,"]"),
"avgCadence" = paste0("[", prettyUnit,"]"),
"avgPower" = paste0("[", prettyUnit,"]"),
"avgHeartRate" = paste0("[", prettyUnit,"]"),
"wrRatio" = "work-to-rest ratio"
)
ret
}
}
data(runs)
runs1 <- summary(runs)
lab_sum(feature = pace, data = runs1)
lab_sum(feature = 'pace;', data = runs1)
lab_sum(feature = 'pace', data = runs1)
lab_sum(feature = 'avgPace', data = runs1)
data <- runs1
feature <- 'avgPace'
feature <- as.character(feature)
units <- getUnits(data)
concept <- switch(feature, 'avgPace' = "pace", 'avgSpeed' = "speed",
'distance' = "distance", 'duration' = "duration",
'avgPower' = "power", 'avgCadence' = "cadence", 'avgHeartRate' = "heart.rate")
thisunit <- units$unit[units$variable == concept]
thisunit
prettifyUnits(thisunit)
lab_sum <- function(feature, data, whole_text = TRUE, transform_feature = TRUE){
feature <- as.character(feature)
units <- getUnits(data)
if(transform_feature == TRUE){
concept <- switch(feature, 'avgPace' = "pace", 'avgSpeed' = "speed",
'distance' = "distance", 'duration' = "duration",
'avgPower' = "power", 'avgCadence' = "cadence", 'avgHeartRate' = "heart.rate")
} else {
concept <- feature
}
thisunit <- units$unit[units$variable == concept]
prettyUnit <- prettifyUnits(thisunit)
if (whole_text == TRUE){
ret <- switch(feature,
"distance" = paste0("Distance \n [", prettyUnit,"]"),
"duration" = paste0("Duration \n [", prettyUnit,"]"),
"avgSpeed" = paste0("Average Speed \n [", prettyUnit,"]"),
"avgPace" = paste0("Average Pace \n [", prettyUnit,"]"),
"avgCadence" = paste0("Average Cadence \n [", prettyUnit,"]"),
"avgPower" = paste0("Average Power \n [", prettyUnit,"]"),
"avgHeartRate" = paste0("Average Heart Rate \n [", prettyUnit,"]"),
"wrRatio" = "work-to-rest \n ratio"
)
ret
} else {
ret <- switch(feature,
"distance" = paste0("[", prettyUnit,"]"),
"duration" = paste0("[", prettyUnit,"]"),
"avgSpeed" = paste0("[", prettyUnit,"]"),
"avgPace" = paste0("[", prettyUnit,"]"),
"avgCadence" = paste0("[", prettyUnit,"]"),
"avgPower" = paste0("[", prettyUnit,"]"),
"avgHeartRate" = paste0("[", prettyUnit,"]"),
"wrRatio" = "work-to-rest ratio"
)
ret
}
}
runs1 <- summary(runs)
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE)
lab_sum <- function(feature, data, whole_text = TRUE, transform_feature = TRUE){
feature <- as.character(feature)
units <- getUnits(data)
if(transform_feature == TRUE){
concept <- switch(feature, 'avgPace' = "pace", 'avgSpeed' = "speed",
'distance' = "distance", 'duration' = "duration",
'avgPower' = "power", 'avgCadence' = "cadence", 'avgHeartRate' = "heart.rate")
} else {
concept <- feature
}
thisunit <- units$unit[units$variable == concept]
prettyUnit <- prettifyUnits(thisunit)
if (whole_text == TRUE){
if(transform_feature == TRUE){
ret <- switch(feature,
"distance" = paste0("Distance \n [", prettyUnit,"]"),
"duration" = paste0("Duration \n [", prettyUnit,"]"),
"avgSpeed" = paste0("Average Speed \n [", prettyUnit,"]"),
"avgPace" = paste0("Average Pace \n [", prettyUnit,"]"),
"avgCadence" = paste0("Average Cadence \n [", prettyUnit,"]"),
"avgPower" = paste0("Average Power \n [", prettyUnit,"]"),
"avgHeartRate" = paste0("Average Heart Rate \n [", prettyUnit,"]"),
"wrRatio" = "work-to-rest \n ratio"
)
} else {
ret <- switch(feature,
"pace" = paste0("Pace \n [", prettyUnit,"]"),
"cadence" = paste0("Cadence \n [", prettyUnit,"]"),
"heart.rate" = paste0("Heart Rate \n [", prettyUnit,"]"),
)
}
ret
} else {
ret <- switch(feature,
"distance" = paste0("[", prettyUnit,"]"),
"duration" = paste0("[", prettyUnit,"]"),
"avgSpeed" = paste0("[", prettyUnit,"]"),
"avgPace" = paste0("[", prettyUnit,"]"),
"avgCadence" = paste0("[", prettyUnit,"]"),
"avgPower" = paste0("[", prettyUnit,"]"),
"avgHeartRate" = paste0("[", prettyUnit,"]"),
"wrRatio" = "work-to-rest ratio"
)
ret
}
}
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE)
startApp()
startApp()
lab_sum <- function(feature, data, whole_text = TRUE, transform_feature = TRUE){
feature <- as.character(feature)
units <- getUnits(data)
if(transform_feature == TRUE){
concept <- switch(feature, 'avgPace' = "pace", 'avgSpeed' = "speed",
'distance' = "distance", 'duration' = "duration",
'avgPower' = "power", 'avgCadence' = "cadence", 'avgHeartRate' = "heart.rate")
} else {
concept <- feature
}
thisunit <- units$unit[units$variable == concept]
prettyUnit <- prettifyUnits(thisunit)
if (whole_text == TRUE){
if(transform_feature == TRUE){
ret <- switch(feature,
"distance" = paste0("Distance \n [", prettyUnit,"]"),
"duration" = paste0("Duration \n [", prettyUnit,"]"),
"avgSpeed" = paste0("Average Speed \n [", prettyUnit,"]"),
"avgPace" = paste0("Average Pace \n [", prettyUnit,"]"),
"avgCadence" = paste0("Average Cadence \n [", prettyUnit,"]"),
"avgPower" = paste0("Average Power \n [", prettyUnit,"]"),
"avgHeartRate" = paste0("Average Heart Rate \n [", prettyUnit,"]"),
"wrRatio" = "work-to-rest \n ratio"
)
} else {
ret <- switch(feature,
"pace" = paste0("Pace \n [", prettyUnit,"]"),
"cadence" = paste0("Cadence \n [", prettyUnit,"]"),
"heart.rate" = paste0("Heart Rate \n [", prettyUnit,"]")
)
}
ret
} else {
if(transform_feature == TRUE){
ret <- switch(feature,
"distance" = paste0("[", prettyUnit,"]"),
"duration" = paste0("[", prettyUnit,"]"),
"avgSpeed" = paste0("[", prettyUnit,"]"),
"avgPace" = paste0("[", prettyUnit,"]"),
"avgCadence" = paste0("[", prettyUnit,"]"),
"avgPower" = paste0("[", prettyUnit,"]"),
"avgHeartRate" = paste0("[", prettyUnit,"]"),
"wrRatio" = "work-to-rest ratio"
)
} else {
ret <- switch(feature,
"pace" = paste0("[", prettyUnit,"]"),
"cadence" = paste0("[", prettyUnit,"]"),
"heart.rate" = paste0("[", prettyUnit,"]")
}
ret
}
}
create_icon <- function(feature){
icon <- switch(feature,
"distance" = 'area-chart',
"duration" = 'clock-o',
"avgSpeed" = 'line-chart',
"avgPace" = 'tachometer',
"avgCadence" = 'spinner',
"avgPower" = 'flash',
"avgHeartRate" = 'heartbeat',
"wrRatio" = 'fire'
)
icon
}
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE)
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE, whole_text = FALSE)
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE, whole_text = FALSE)
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE)
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE, whole_text = TRUE)
lab_sum <- function(feature, data, whole_text = TRUE, transform_feature = TRUE){
feature <- as.character(feature)
units <- getUnits(data)
if(transform_feature == TRUE){
concept <- switch(feature, 'avgPace' = "pace", 'avgSpeed' = "speed",
'distance' = "distance", 'duration' = "duration",
'avgPower' = "power", 'avgCadence' = "cadence", 'avgHeartRate' = "heart.rate")
} else {
concept <- feature
}
thisunit <- units$unit[units$variable == concept]
prettyUnit <- prettifyUnits(thisunit)
if (whole_text == TRUE){
if(transform_feature == TRUE){
ret <- switch(feature,
"distance" = paste0("Distance \n [", prettyUnit,"]"),
"duration" = paste0("Duration \n [", prettyUnit,"]"),
"avgSpeed" = paste0("Average Speed \n [", prettyUnit,"]"),
"avgPace" = paste0("Average Pace \n [", prettyUnit,"]"),
"avgCadence" = paste0("Average Cadence \n [", prettyUnit,"]"),
"avgPower" = paste0("Average Power \n [", prettyUnit,"]"),
"avgHeartRate" = paste0("Average Heart Rate \n [", prettyUnit,"]"),
"wrRatio" = "work-to-rest \n ratio"
)
} else {
ret <- switch(feature,
"pace" = paste0("Pace \n [", prettyUnit,"]"),
"cadence" = paste0("Cadence \n [", prettyUnit,"]"),
"heart.rate" = paste0("Heart Rate \n [", prettyUnit,"]")
)
}
ret
} else {
if(transform_feature == TRUE){
ret <- switch(feature,
"distance" = paste0("[", prettyUnit,"]"),
"duration" = paste0("[", prettyUnit,"]"),
"avgSpeed" = paste0("[", prettyUnit,"]"),
"avgPace" = paste0("[", prettyUnit,"]"),
"avgCadence" = paste0("[", prettyUnit,"]"),
"avgPower" = paste0("[", prettyUnit,"]"),
"avgHeartRate" = paste0("[", prettyUnit,"]"),
"wrRatio" = "work-to-rest ratio"
)
} else {
print('s')
ret <- switch(feature,
"pace" = paste0("[", prettyUnit,"]"),
"cadence" = paste0("[", prettyUnit,"]"),
"heart.rate" = paste0("[", prettyUnit,"]")
}
ret
}
}
lab_sum <- function(feature, data, whole_text = TRUE, transform_feature = TRUE){
feature <- as.character(feature)
units <- getUnits(data)
if(transform_feature == TRUE){
concept <- switch(feature, 'avgPace' = "pace", 'avgSpeed' = "speed",
'distance' = "distance", 'duration' = "duration",
'avgPower' = "power", 'avgCadence' = "cadence", 'avgHeartRate' = "heart.rate"
)
} else {
concept <- feature
}
thisunit <- units$unit[units$variable == concept]
prettyUnit <- prettifyUnits(thisunit)
if (whole_text == TRUE){
if(transform_feature == TRUE){
ret <- switch(feature,
"distance" = paste0("Distance \n [", prettyUnit,"]"),
"duration" = paste0("Duration \n [", prettyUnit,"]"),
"avgSpeed" = paste0("Average Speed \n [", prettyUnit,"]"),
"avgPace" = paste0("Average Pace \n [", prettyUnit,"]"),
"avgCadence" = paste0("Average Cadence \n [", prettyUnit,"]"),
"avgPower" = paste0("Average Power \n [", prettyUnit,"]"),
"avgHeartRate" = paste0("Average Heart Rate \n [", prettyUnit,"]"),
"wrRatio" = "work-to-rest \n ratio"
)
} else {
ret <- switch(feature,
"pace" = paste0("Pace \n [", prettyUnit,"]"),
"cadence" = paste0("Cadence \n [", prettyUnit,"]"),
"heart.rate" = paste0("Heart Rate \n [", prettyUnit,"]")
)
}
ret
} else {
if(transform_feature == TRUE){
ret <- switch(feature,
"distance" = paste0("[", prettyUnit,"]"),
"duration" = paste0("[", prettyUnit,"]"),
"avgSpeed" = paste0("[", prettyUnit,"]"),
"avgPace" = paste0("[", prettyUnit,"]"),
"avgCadence" = paste0("[", prettyUnit,"]"),
"avgPower" = paste0("[", prettyUnit,"]"),
"avgHeartRate" = paste0("[", prettyUnit,"]"),
"wrRatio" = "work-to-rest ratio"
)
} else {
print('s')
ret <- switch(feature,
"pace" = paste0("[", prettyUnit,"]"),
"cadence" = paste0("[", prettyUnit,"]"),
"heart.rate" = paste0("[", prettyUnit,"]")
)
}
ret
}
}
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE, whole_text = TRUE)
lab_sum(feature = 'pace', data = runs1, transform_feature = FALSE, whole_text = FALSE)
startApp()
vector('list', 3)
vector('lis', 3)
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
summary(runs)
runs1 <- summary(runs)
getUnits(runs)
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
devtools::load_all()
startApp()
devtools::load_all()
startApp()
startApp()
startApp()
